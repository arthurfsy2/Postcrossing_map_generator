name: Run Data Sync

on:
  workflow_dispatch:
  schedule:
    - cron: '00 1 * * *'
  push:
    branches:
      - main

env:
  GITHUB_NAME: arthurfsy2
  GITHUB_EMAIL: fsyflh@gmail.com

jobs:
  sync:
    name: 同步
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: 设置Python版本
        id: setup_python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: 'requirements.txt'
      
      - name: 安装依赖
        run: |
          pip install -r requirements.txt
      
      
      - name: 安装openpyxl
        run: |
          pip install openpyxl -i http://pypi.doubanio.com/simple/ --trusted-host pypi.doubanio.com

      # - name: 获取展示墙数据
      #   run: |
      #     python scripts/login.py ${{ secrets.ACCOUNT }} ${{ secrets.PASSWORD }} ${{ secrets.NICKNAME }} 
      #     python scripts/createMap.py
      #     python scripts/createGallery.py
      #     python scripts/createPersonalPage.py
      - name: 获取展示墙数据
        run: |
          Cookie=$(python scripts/login.py ${{ secrets.ACCOUNT }} ${{ secrets.PASSWORD }} ${{ secrets.NICKNAME }} ${{ secrets.COOKIE }} $GITHUB_REPOSITORY | grep -oP 'Cookie_new: \K.*')
          
          python scripts/startTask.py ${{ secrets.ACCOUNT }} ${{ secrets.PASSWORD }} ${{ secrets.NICKNAME }} ${{ secrets.COOKIE }} $GITHUB_REPOSITORY
    

          echo "secret.Cookie=$Cookie" >> $GITHUB_ENV
          # 将输出设置为环境变量
          echo "Cookie=$Cookie" >> $GITHUB_ENV
      
      - name: 删除缓存文件
        run: rm -rf scripts/__pycache__/    
      
      - name: 检查文件更新
        id: check_changes
        run: |
          git diff --quiet || echo "changes=true" >> $GITHUB_OUTPUT

      - name: 提交
        run: |
          git config --local user.email "${{ env.GITHUB_EMAIL }}"
          git config --local user.name "${{ env.GITHUB_NAME }}"
          git add .
          git diff --cached --quiet || git commit -m "保存已修改文件"
          if [[ "${{ steps.check_changes.outputs.changes }}" == "true" ]]; then
            git push
          else
            echo "No changes to push."
            git reset --hard HEAD  # 取消已经提交的文件变动
          fi
